name: Continuous Integration

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  ci-process:
    name: Lint, Test, Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run Lint
        run: npm run lint

      - name: Build Next.js
        run: npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

  sonar:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    needs: ci-process

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Install test dependencies (Jest)
        run: npm install --save-dev jest --legacy-peer-deps

      - name: Install Sonar Scanner CLI
        run: npm install -g sonar-scanner

      - name: Start SonarQube container
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
            sonarqube:community
          echo "Waiting for SonarQube to start..."
          sleep 60  # Tunggu sampai SonarQube siap menerima request

      - name: Run Jest coverage
        run: npm run test:coverage -- --passWithNoTests

      - name: Run SonarQube Scanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=fp-pso-fe \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
